// Code generated by hertz generator.

package tiktokapi

import (
	"context"
	tiktokapi "github.com/PICOF/simple-tiktok/cmd/api/biz/model/tiktokapi"
	"github.com/PICOF/simple-tiktok/cmd/api/biz/rpc/comment"
	"github.com/cloudwego/hertz/pkg/app"
	"github.com/cloudwego/hertz/pkg/protocol/consts"
)

// CommentAction .
// @router /douyin/comment/action/ [POST]
func CommentAction(ctx context.Context, c *app.RequestContext) {
	var err error
	var req tiktokapi.CommentRequest
	err = c.BindAndValidate(&req)
	if err != nil {
		c.String(consts.StatusBadRequest, err.Error())
		return
	}

	userId := c.GetInt64("user_id")
	resp, err := comment.Action(ctx, &req, userId)

	if err != nil && resp == nil {
		msg := "请求远程服务时出错"
		c.JSON(consts.StatusInternalServerError, tiktokapi.LoginResponse{
			StatusCode: -1,
			StatusMsg:  &msg,
		})
	} else {
		c.JSON(consts.StatusOK, resp)
	}
}

// GetCommentList .
// @router /douyin/comment/list/ [GET]
func GetCommentList(ctx context.Context, c *app.RequestContext) {
	var err error
	var req tiktokapi.CommentListRequest
	err = c.BindAndValidate(&req)
	if err != nil {
		c.String(consts.StatusBadRequest, err.Error())
		return
	}

	userId := c.GetInt64("user_id")
	resp, err := comment.GetCommentList(ctx, &req, userId)

	if err != nil && resp == nil {
		msg := "请求远程服务时出错"
		c.JSON(consts.StatusInternalServerError, tiktokapi.LoginResponse{
			StatusCode: -1,
			StatusMsg:  &msg,
		})
	} else {
		c.JSON(consts.StatusOK, resp)
	}
}
